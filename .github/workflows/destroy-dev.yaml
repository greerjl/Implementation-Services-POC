name: Destroy Dev

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Type DESTROY to confirm tearing down DEV'
        required: true
      delete_images:
        description: 'Also delete ECR images tagged dev-* (optional)'
        type: boolean
        default: false

permissions:
  id-token: write
  contents: read

concurrency:
  group: destroy-dev
  cancel-in-progress: false

jobs:
  destroy-dev:
    runs-on: ubuntu-latest
    environment: dev
    env:
      AWS_REGION: ${{ vars.AWS_REGION }}                # e.g. us-east-1
      ECR_REPO:   ${{ vars.ECR_REPO }}                  # app-demo
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Configure AWS (dev)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}      # arn:aws:iam::0356...:role/GitHubAction-AssumeRoleWithAction
          aws-region:     ${{ env.AWS_REGION }}

      - name: Show caller identity
        run: aws sts get-caller-identity

      - name: Init backend (dev)
        working-directory: terraform
        run: |
          terraform init -input=false -reconfigure -backend-config=backend/dev.hcl

      - name: Sanity check state contents
        working-directory: terraform
        run: terraform state list || true

      # Optional: scale ECS service to 0 first (speeds up destroy)
      - name: Set ECS desired count to 0
        run: |
          aws ecs update-service \
            --cluster app-demo-dev-cluster \
            --service app-demo-dev-service \
            --desired-count 0 || true

      - name: Destroy all dev resources (no -target)
        working-directory: terraform
        env:
          TF_VAR_env:        dev
          TF_VAR_aws_region: ${{ env.AWS_REGION }}
        run: |
          terraform destroy -input=false -auto-approve -var-file=tfvars/dev.tfvars
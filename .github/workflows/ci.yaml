name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  id-token: write
  contents: read

env:
  ECR_REGISTRY: ${{ vars.ECR_REGISTRY }}
  ECR_REPO: ${{ vars.ECR_REPO }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - env: dev
            aws_region: us-east-1

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::035636365182:role/GitHubAction-AssumeRoleWithAction
          aws-region: ${{ matrix.aws_region }}
          # Optionally set a session name or duration:
          # role-session-name: github-actions
          # role-duration-seconds: 900

      - name: Login to ECR (safe)
        run: |
          aws ecr get-login-password --region ${{ matrix.aws_region }} \
          | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}

      - name: Build & push image
        id: img
        run: |
          IMAGE="${{ env.ECR_REGISTRY }}/${{ env.ECR_REPO }}:${{ matrix.env }}-${{ github.sha }}"
          docker build -t "$IMAGE" app
          docker push "$IMAGE"
          echo "image=$IMAGE" >> $GITHUB_OUTPUTv

      - name: Save image tag for Terraform
        id: set-image
        run: |
          IMAGE_TAG="${{ env.ECR_REGISTRY }}/${{ env.ECR_REPO }}:${{ matrix.env }}-${{ github.sha }}"
          echo "image=${IMAGE_TAG}" >> $GITHUB_OUTPUT

      - name: Terraform init, plan and apply
        env:
          TF_VAR_env: ${{ matrix.env }}
          TF_VAR_image: ${{ steps.set-image.outputs.image }}
          TF_VAR_aws_region: ${{ matrix.aws_region }}
        run: |
          terraform init -input=false
          terraform plan -input=false -out=tfplan
          terraform apply -input=false -auto-approve tfplan